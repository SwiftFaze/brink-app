package com.brink.model.ui;import com.brink.model.ableton.*;import javafx.beans.property.SimpleBooleanProperty;import javafx.beans.property.SimpleIntegerProperty;import javafx.beans.property.SimpleStringProperty;import javafx.scene.control.TableColumn;import javafx.scene.control.TableView;import javafx.scene.layout.VBox;import java.util.List;public class AbletonTrackTableView extends VBox {    public AbletonTrackTableView(AbletonTracks tracks) {        setSpacing(12);        setStyle("-fx-padding: 10;");        TableView<AbletonTrack> audioTable = createAudioTrackTable();        // If there are audio tracks, add them to the table        if (tracks != null) {            if (tracks.getTracks() != null) {                audioTable.getItems().addAll(tracks.getTracks());            }        }        getChildren().add(audioTable);    }    private static TableView<AbletonTrack> createAudioTrackTable() {        // Create the TableView for AbletonAudioTrack        TableView<AbletonTrack> table = new TableView<>();        table.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);        // ID Column        TableColumn<AbletonTrack, Integer> idCol = new TableColumn<>("ID");        idCol.setCellValueFactory(cellData -> new SimpleIntegerProperty(cellData.getValue().getId()).asObject());        // LomId Column        TableColumn<AbletonTrack, Integer> lomIdCol = new TableColumn<>("Lom ID");        lomIdCol.setCellValueFactory(cellData -> new SimpleIntegerProperty(cellData.getValue().getLomId()).asObject());        // Name Column        TableColumn<AbletonTrack, String> nameCol = new TableColumn<>("Name");        nameCol.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().getTrackName().getEffectiveName()));        // IsFrozen Column        TableColumn<AbletonTrack, Boolean> isFrozen = new TableColumn<>("Frozen");        isFrozen.setCellValueFactory(cellData -> new SimpleBooleanProperty(cellData.getValue().isFrozen()));        // Add the columns to the table        table.getColumns().addAll(idCol, lomIdCol, nameCol, isFrozen);        return table;    }}