package com.brink.model.ui;import com.brink.model.ableton.AbletonAudioClip;import com.brink.model.app.AudioClip;import javafx.beans.property.SimpleBooleanProperty;import javafx.beans.property.SimpleStringProperty;import javafx.scene.control.TableColumn;import javafx.scene.control.TableView;import javafx.scene.layout.VBox;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import java.util.List;public class AbletonAudioClipTableView extends VBox {    private static final Logger logger = LoggerFactory.getLogger(AbletonAudioClipTableView.class);    public AbletonAudioClipTableView(List<AudioClip> audioClipList) {        setSpacing(12);        setStyle("-fx-padding: 10;");        TableView<AudioClip> audoClipTable = createAudioClipTable();        audoClipTable.getItems().addAll(audioClipList);        getChildren().add(audoClipTable);    }    private static TableView<AudioClip> createAudioClipTable() {        TableView<AudioClip> table = new TableView<>();        table.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);        TableColumn<AudioClip, String> nameCol = new TableColumn<>("Name");        nameCol.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().getName()));        TableColumn<AudioClip, Boolean> isNativeCol = new TableColumn<>("In project");        isNativeCol.setCellValueFactory(cellData -> new SimpleBooleanProperty(cellData.getValue().isInProject()));        table.getColumns().addAll(nameCol, isNativeCol);        return table;    }}