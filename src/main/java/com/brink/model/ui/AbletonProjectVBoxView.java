package com.brink.model.ui;import com.brink.model.ableton.AbletonProject;import javafx.scene.control.Label;import javafx.scene.control.TextField;import javafx.scene.layout.VBox;import org.slf4j.Logger;import org.slf4j.LoggerFactory;public class AbletonProjectVBoxView extends VBox {    private static final Logger logger = LoggerFactory.getLogger(AbletonProjectVBoxView.class);    public AbletonProjectVBoxView(AbletonProject project) {        setSpacing(12);        setStyle("-fx-padding: 15;");        Label titleLabel = new Label("Ableton Project Info");        titleLabel.setStyle("-fx-font-weight: bold; -fx-font-size: 16;");        TextField creatorField = readOnlyField("Creator: " + safe(project.getCreator()));        TextField majorVersionField = readOnlyField("Major Version: " + project.getMajorVersion());        TextField minorVersionField = readOnlyField("Minor Version: " + safe(project.getMinorVersion()));        TextField revisionField = readOnlyField("Revision: " + safe(project.getRevision()));        TextField schemaChangeField = readOnlyField("Schema Changes: " + project.getSchemaChangeCount());        getChildren().addAll(                titleLabel,                creatorField,                majorVersionField,                minorVersionField,                revisionField,                schemaChangeField        );        if (project.getLiveSet() != null) {            getChildren().add(new AbletonLiveSetVBoxView(project.getLiveSet()));        }    }    private TextField readOnlyField(String text) {        TextField field = new TextField(text);        field.setEditable(false);        field.setFocusTraversable(false);        field.setStyle("-fx-background-color: transparent; -fx-border-color: transparent;");        return field;    }    private String safe(String s) {        return s != null ? s : "N/A";    }}