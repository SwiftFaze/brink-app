package com.brink.model;import java.io.File;import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.IOException;import java.util.Properties;public class AppSettings {    private String abletonProjectFolderPath;    private String abletonProjectTemplateFilePath;    private String gitMainBranchName;    private String gitUsername;    private String gitEmail;    private String gitToken;    private final String settingsFilePath = "brink.properties";    public AppSettings() {        this.abletonProjectFolderPath = "R:\\MUSIC\\ABLETON PROJECTS\\11\\2025";        this.abletonProjectTemplateFilePath = "R:\\MUSIC\\ABLETON\\User Library\\Templates\\Untitled.als";        this.gitMainBranchName = "main";        this.gitUsername = "rwoolley";        this.gitEmail = "rjjw.dev@gmail.com";        this.gitToken = "1234";        loadSettings();    }    public AppSettings(String abletonProjectFolderPath, String abletonProjectTemplateFilePath, String gitMainBranchName, String gitUsername, String gitEmail, String gitToken) {        this.abletonProjectFolderPath = abletonProjectFolderPath;        this.abletonProjectTemplateFilePath = abletonProjectTemplateFilePath;        this.gitUsername = gitUsername;        this.gitMainBranchName = gitMainBranchName;        this.gitEmail = gitEmail;        this.gitToken = gitToken;        saveSettings();    }    private void loadSettings() {        File settingsFile = new File(settingsFilePath);        if (settingsFile.exists()) {            try (FileInputStream inputStream = new FileInputStream(settingsFile)) {                Properties properties = new Properties();                properties.load(inputStream);                this.abletonProjectFolderPath = properties.getProperty("abletonProjectFolderPath", this.abletonProjectFolderPath);                this.abletonProjectTemplateFilePath = properties.getProperty("abletonProjectTemplateFilePath", this.abletonProjectTemplateFilePath);                this.gitUsername = properties.getProperty("gitMainBranchName", this.gitMainBranchName);                this.gitUsername = properties.getProperty("gitUsername", this.gitUsername);                this.gitEmail = properties.getProperty("gitEmail", this.gitEmail);                this.gitToken = properties.getProperty("gitToken", this.gitToken);            } catch (IOException e) {                System.out.println("Error reading the settings file: " + e.getMessage());            }        } else {            saveSettings();        }    }    public void saveSettings() {        Properties properties = new Properties();        properties.setProperty("abletonProjectFolderPath", this.abletonProjectFolderPath);        properties.setProperty("abletonProjectTemplateFilePath", this.abletonProjectTemplateFilePath);        properties.setProperty("gitMainBranchName", this.gitMainBranchName);        properties.setProperty("gitUsername", this.gitUsername);        properties.setProperty("gitEmail", this.gitEmail);        properties.setProperty("gitToken", this.gitToken);        try (FileOutputStream outputStream = new FileOutputStream(settingsFilePath)) {            properties.store(outputStream, "Brink settings");        } catch (IOException e) {            System.out.println("Error saving the settings file: " + e.getMessage());        }    }    public String getAbletonProjectFolderPath() {        return abletonProjectFolderPath;    }    public void setAbletonProjectFolderPath(String abletonProjectFolderPath) {        this.abletonProjectFolderPath = abletonProjectFolderPath;    }    public String getAbletonProjectTemplateFilePath() {        return abletonProjectTemplateFilePath;    }    public void setAbletonProjectTemplateFilePath(String abletonProjectTemplateFilePath) {        this.abletonProjectTemplateFilePath = abletonProjectTemplateFilePath;    }    public String getGitUsername() {        return gitUsername;    }    public void setGitUsername(String gitUsername) {        this.gitUsername = gitUsername;    }    public String getGitToken() {        return gitToken;    }    public void setGitToken(String gitToken) {        this.gitToken = gitToken;    }    public String getGitEmail() {        return gitEmail;    }    public void setGitEmail(String gitEmail) {        this.gitEmail = gitEmail;    }    public String getGitMainBranchName() {        return gitMainBranchName;    }    public void setGitMainBranchName(String gitMainBranchName) {        this.gitMainBranchName = gitMainBranchName;    }    public String getSettingsFilePath() {        return settingsFilePath;    }}